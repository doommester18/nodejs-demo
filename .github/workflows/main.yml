name: Test

on:
  push:
    tags:
      - '*dev'
      - '*test'
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab
  
jobs:

  build-and-test-nodejs:
    name: Build and test nodejs app
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 15.x, 16.x]
    
    steps:
      - uses: actions/checkout@v2 # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          npm install
          npm ci 

      - name: build # npm run test, test1 - itt lefutnak a unit tesztek, amíg ez nincs meg nem készül build
        run: |
          npm run build
          npm run test 

  build-and-push-to-gcr:
    name: Build and Push to GCR
    runs-on: ubuntu-latest
    needs: [build-and-test-nodejs]
    env:
      IMAGE_NAME: platform-test
      PROJECT_ID: ancient-cortex-307015 # saas gcp service account key kell hozzá
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }} # saas gcp service account key kell hozzá
        project_id: ${{ env.PROJECT_ID }}
        export_default_credentials: true

    - name: Extract Git Tag
      run: echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest .

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet  

    - name: Push Docker Image to Container Registry (GCR) # hogyan lehet tesztelni a push-t
      run: |-
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:${{ env.TAG }}
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:${{ env.TAG }}      

